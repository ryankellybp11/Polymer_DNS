function [R,WX,SCL,USQ] = importfrdata(filename, nsteps, startRow, endRow)
%IMPORTFRDATA Import numeric data from a .dat file as column vectors.
%   [r,wx,scl,usq] = IMPORTFRDATA(FILENAME,NSTEPS)
%   Reads data from text file FILENAME for the default selection,
%   specifying nsteps based on how many time data points there are
%
%   [r,wx,scl,usq] = IMPORTFRDATA(FILENAME, STARTROW, ENDROW)
%   Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
%   Outputs are (npts) x (nsteps) arrays where npts are the number of
%   data points generated in the DNS code and nsteps = (nsteps + 1) from
%   the DNS code (because the initial step at it=0 is printed as the first
%   step)
%
% Example:
%   [r,wx,scl,usq] = importfrdata('fr.dat',100,1, 384);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2024/12/13 10:40:07

%% Initialize variables.
if nargin<=3
    startRow = 1;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%14f%15f%15f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this code. If an error occurs for a different file, try regenerating the code from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post processing code is included. To generate code which works for unimportable data, select unimportable cells in a file and regenerate the script.

%% Allocate imported array to column variable names
r = dataArray{:, 1};
wx = dataArray{:, 2};
scl = dataArray{:, 3};
usq = dataArray{:, 4};

%% Split arrays into time-based chunks
npts = length(r)/nsteps; % # of points printed per time step
R = zeros(npts,nsteps);
WX = R;
SCL = R;
USQ = R;
for ii = 1:nsteps
    istart = (ii-1)*npts + 1;
    istop  = ii*npts;
    thisstep = istart:istop;
    R(:,ii) = r(thisstep);
    WX(:,ii) = wx(thisstep);
    SCL(:,ii) = scl(thisstep);
    USQ(:,ii) = usq(thisstep);
end
